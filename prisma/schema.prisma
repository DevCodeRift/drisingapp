generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tasks         UserTask[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model TaskTemplate {
  id          String      @id @default(cuid())
  title       String
  description String?
  category    TaskCategory
  resetType   ResetType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userTasks   UserTask[]
}

model UserTask {
  id             String       @id @default(cuid())
  userId         String
  taskTemplateId String
  completed      Boolean      @default(false)
  completedAt    DateTime?
  resetAt        DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  taskTemplate TaskTemplate @relation(fields: [taskTemplateId], references: [id], onDelete: Cascade)

  @@unique([userId, taskTemplateId])
}

enum TaskCategory {
  DAILY
  WEEKLY
  MONTHLY
  SEASONAL
}

enum ResetType {
  DAILY_2AM_UTC
  WEEKLY_MONDAY
  WEEKLY_FRIDAY
  MONTHLY
  SEASONAL
  TIME_LIMITED_FRI_TO_MON
}